{"ast":null,"code":"import { createRequestType, createAction, REQUEST, SUCCESS, FAILURE } from './index'; //async action\n\nexport const MOST_POPULAR_ONLINE = createRequestType('MOST_POPULAR_ONLINE');\nexport const CREATE_NEW_VIDEO = createRequestType('CREATE_NEW_VIDEO'); //sync action\n\nexport const GET_VIDEO_ID = 'GET_VIDEO_ID'; //\n\nexport const mostPopularOnline = {\n  request: filter => createAction(MOST_POPULAR_ONLINE[REQUEST], {\n    filter\n  }),\n  success: response => createAction(MOST_POPULAR_ONLINE[SUCCESS], {\n    response\n  }),\n  failure: response => createAction(MOST_POPULAR_ONLINE[FAILURE], {\n    response\n  })\n}; // export const mostPopularOffline = {\n//   request: (filter?: any) =>\n//     createAction(MOST_POPULAR[REQUEST], {\n//       filter,\n//     }),\n//   success: (response: any) => createAction(MOST_POPULAR[SUCCESS], { response }),\n//   failure: (response: any) => createAction(MOST_POPULAR[FAILURE], { response }),\n// };\n\nexport const getVideoById = {\n  request: videoId => createAction(GET_VIDEO_ID, {\n    videoId\n  })\n};\nexport const createNewVideo = {\n  request: data => createAction(CREATE_NEW_VIDEO[REQUEST], {\n    data\n  }),\n  success: response => createAction(CREATE_NEW_VIDEO[SUCCESS], {\n    response\n  }),\n  failure: response => createAction(CREATE_NEW_VIDEO[FAILURE], {\n    response\n  })\n};","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/state/action/video.ts"],"names":["createRequestType","createAction","REQUEST","SUCCESS","FAILURE","MOST_POPULAR_ONLINE","CREATE_NEW_VIDEO","GET_VIDEO_ID","mostPopularOnline","request","filter","success","response","failure","getVideoById","videoId","createNewVideo","data"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,YAA5B,EAA0CC,OAA1C,EAAmDC,OAAnD,EAA4DC,OAA5D,QAA2E,SAA3E,C,CAEA;;AACA,OAAO,MAAMC,mBAAmB,GAAGL,iBAAiB,CAAC,qBAAD,CAA7C;AACP,OAAO,MAAMM,gBAAgB,GAAGN,iBAAiB,CAAC,kBAAD,CAA1C,C,CACP;;AACA,OAAO,MAAMO,YAAY,GAAG,cAArB,C,CAEP;;AACA,OAAO,MAAMC,iBAAiB,GAAG;AAC/BC,EAAAA,OAAO,EAAGC,MAAD,IACPT,YAAY,CAACI,mBAAmB,CAACH,OAAD,CAApB,EAA+B;AACzCQ,IAAAA;AADyC,GAA/B,CAFiB;AAK/BC,EAAAA,OAAO,EAAGC,QAAD,IAAmBX,YAAY,CAACI,mBAAmB,CAACF,OAAD,CAApB,EAA+B;AAAES,IAAAA;AAAF,GAA/B,CALT;AAM/BC,EAAAA,OAAO,EAAGD,QAAD,IAAmBX,YAAY,CAACI,mBAAmB,CAACD,OAAD,CAApB,EAA+B;AAAEQ,IAAAA;AAAF,GAA/B;AANT,CAA1B,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,YAAY,GAAG;AAC1BL,EAAAA,OAAO,EAAGM,OAAD,IAAkBd,YAAY,CAACM,YAAD,EAAe;AAAEQ,IAAAA;AAAF,GAAf;AADb,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG;AAC5BP,EAAAA,OAAO,EAAGQ,IAAD,IAAehB,YAAY,CAACK,gBAAgB,CAACJ,OAAD,CAAjB,EAA4B;AAAEe,IAAAA;AAAF,GAA5B,CADR;AAE5BN,EAAAA,OAAO,EAAGC,QAAD,IAAmBX,YAAY,CAACK,gBAAgB,CAACH,OAAD,CAAjB,EAA4B;AAAES,IAAAA;AAAF,GAA5B,CAFZ;AAG5BC,EAAAA,OAAO,EAAGD,QAAD,IAAmBX,YAAY,CAACK,gBAAgB,CAACF,OAAD,CAAjB,EAA4B;AAAEQ,IAAAA;AAAF,GAA5B;AAHZ,CAAvB","sourcesContent":["import { createRequestType, createAction, REQUEST, SUCCESS, FAILURE } from './index';\r\n\r\n//async action\r\nexport const MOST_POPULAR_ONLINE = createRequestType('MOST_POPULAR_ONLINE');\r\nexport const CREATE_NEW_VIDEO = createRequestType('CREATE_NEW_VIDEO');\r\n//sync action\r\nexport const GET_VIDEO_ID = 'GET_VIDEO_ID';\r\n\r\n//\r\nexport const mostPopularOnline = {\r\n  request: (filter?: any) =>\r\n    createAction(MOST_POPULAR_ONLINE[REQUEST], {\r\n      filter,\r\n    }),\r\n  success: (response: any) => createAction(MOST_POPULAR_ONLINE[SUCCESS], { response }),\r\n  failure: (response: any) => createAction(MOST_POPULAR_ONLINE[FAILURE], { response }),\r\n};\r\n\r\n// export const mostPopularOffline = {\r\n//   request: (filter?: any) =>\r\n//     createAction(MOST_POPULAR[REQUEST], {\r\n//       filter,\r\n//     }),\r\n//   success: (response: any) => createAction(MOST_POPULAR[SUCCESS], { response }),\r\n//   failure: (response: any) => createAction(MOST_POPULAR[FAILURE], { response }),\r\n// };\r\n\r\nexport const getVideoById = {\r\n  request: (videoId: any) => createAction(GET_VIDEO_ID, { videoId }),\r\n};\r\n\r\nexport const createNewVideo = {\r\n  request: (data: any) => createAction(CREATE_NEW_VIDEO[REQUEST], { data }),\r\n  success: (response: any) => createAction(CREATE_NEW_VIDEO[SUCCESS], { response }),\r\n  failure: (response: any) => createAction(CREATE_NEW_VIDEO[FAILURE], { response }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}