{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\component\\\\form\\\\trending-update-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as watchAction from '../../state/action/watch';\nimport { getLoading } from '../../state/reducer/video';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './trending-update-form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TrendingUpdateForm(props) {\n  _s();\n\n  var _videoInformation$id, _videoInformation$sni, _videoInformation$sni2, _videoInformation$sni3, _videoInformation$sni4;\n\n  const {\n    videoInformation,\n    isShowing,\n    hide,\n    closeModal\n  } = props;\n  const [newVideo, setNewVideo] = useState({\n    id: '',\n    snippet: {\n      channelId: '',\n      title: '',\n      description: '',\n      thumbnails: {\n        medium: {\n          url: ''\n        }\n      }\n    }\n  });\n  const isLoading = useSelector(getLoading);\n  const [hasError, setHasError] = useState();\n  const dispatch = useDispatch();\n  const videoIdRef = useRef(null);\n  const ChannelIdRef = useRef(null);\n  const videoTitleRef = useRef(null);\n  const videoDescriptionRef = useRef(null);\n  const videoImageRef = useRef(null); //\n\n  function handleIdChange(e) {\n    let field = e.target.name;\n    setNewVideo({ ...newVideo,\n      [field]: e.target.value\n    });\n  }\n\n  function handleSnippetChange(e) {\n    let field = e.target.name;\n    setNewVideo(prev => ({ ...prev,\n      snippet: { ...prev.snippet,\n        [field]: e.target.value\n      }\n    }));\n  }\n\n  function handleImageChange(e) {\n    setNewVideo(prev => ({ ...prev,\n      snippet: { ...prev.snippet,\n        thumbnails: {\n          medium: {\n            url: e.target.value\n          }\n        }\n      }\n    }));\n  }\n\n  function handleformValidation() {\n    if (!videoIdRef.current.value || !ChannelIdRef.current.value || !videoTitleRef.current.value || !videoDescriptionRef.current.value || !videoImageRef.current.value) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async function handleSubmitNewVideo(e) {\n    e.preventDefault();\n\n    if (!handleformValidation()) {\n      toast.error('Invalid form');\n    } else {\n      const data = {\n        id: videoIdRef.current.value,\n        snippet: {\n          channelId: ChannelIdRef.current.value,\n          title: videoTitleRef.current.value,\n          description: videoDescriptionRef.current.value,\n          thumbnails: {\n            medium: {\n              url: videoImageRef.current.value\n            }\n          }\n        }\n      };\n\n      try {\n        dispatch(watchAction.updateWatch.request(data));\n        closeModal();\n      } catch (error) {\n        alert(error);\n        closeModal();\n        setHasError(error);\n      }\n    }\n  }\n\n  return isShowing ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-wrapper\",\n      \"aria-modal\": true,\n      \"aria-hidden\": true,\n      tabIndex: -1,\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"modal-header__title \",\n            children: \"Update video \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"modal-close-button\",\n            \"data-dismiss\": \"modal\",\n            \"aria-label\": \"Close\",\n            onClick: hide,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            className: \"update-form\",\n            onSubmit: e => handleSubmitNewVideo(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__div\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: videoIdRef,\n                type: \"text\",\n                className: \"form__input\",\n                placeholder: \" \",\n                name: \"id\",\n                defaultValue: (_videoInformation$id = videoInformation.id) !== null && _videoInformation$id !== void 0 ? _videoInformation$id : 'none',\n                onChange: e => handleIdChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form__label\",\n                children: \"Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__div\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: videoTitleRef,\n                type: \"text\",\n                className: \"form__input\",\n                placeholder: \" \",\n                name: \"title\",\n                defaultValue: (_videoInformation$sni = videoInformation.snippet.title) !== null && _videoInformation$sni !== void 0 ? _videoInformation$sni : 'none',\n                onChange: e => handleSnippetChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form__label\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__div\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: videoImageRef,\n                type: \"text\",\n                className: \"form__input\",\n                placeholder: \" \",\n                name: \"url\",\n                defaultValue: (_videoInformation$sni2 = videoInformation.snippet.thumbnails.medium.url) !== null && _videoInformation$sni2 !== void 0 ? _videoInformation$sni2 : 'none',\n                onChange: e => handleImageChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form__label\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__div\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: ChannelIdRef,\n                type: \"text\",\n                className: \"form__input\",\n                placeholder: \" \",\n                name: \"channelId\",\n                defaultValue: (_videoInformation$sni3 = videoInformation.snippet.channelId) !== null && _videoInformation$sni3 !== void 0 ? _videoInformation$sni3 : 'none',\n                onChange: e => handleSnippetChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form__label\",\n                children: \"Channel id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form__div\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ref: videoDescriptionRef,\n                type: \"text\",\n                className: \"form__input\",\n                placeholder: \" \",\n                name: \"description\",\n                defaultValue: (_videoInformation$sni4 = videoInformation.snippet.description) !== null && _videoInformation$sni4 !== void 0 ? _videoInformation$sni4 : 'none',\n                onChange: e => handleSnippetChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form__label\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              disabled: true,\n              className: \"form__button disable\",\n              value: 'loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"form__button\",\n              value: 'UPDATE'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), hasError && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"something wrong\"\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this), document.body) : null;\n}\n\n_s(TrendingUpdateForm, \"A3WUONB4BFZfBaj6F+G1/4p31tY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TrendingUpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrendingUpdateForm\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/component/form/trending-update-form.tsx"],"names":["React","useRef","useState","ReactDOM","useDispatch","useSelector","watchAction","getLoading","ToastContainer","toast","TrendingUpdateForm","props","videoInformation","isShowing","hide","closeModal","newVideo","setNewVideo","id","snippet","channelId","title","description","thumbnails","medium","url","isLoading","hasError","setHasError","dispatch","videoIdRef","ChannelIdRef","videoTitleRef","videoDescriptionRef","videoImageRef","handleIdChange","e","field","target","name","value","handleSnippetChange","prev","handleImageChange","handleformValidation","current","handleSubmitNewVideo","preventDefault","error","data","updateWatch","request","alert","createPortal","document","body"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as watchAction from '../../state/action/watch';\r\nimport { getLoading } from '../../state/reducer/video';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport './trending-update-form.scss';\r\n\r\nexport function TrendingUpdateForm(props: any) {\r\n  const { videoInformation, isShowing, hide, closeModal } = props;\r\n  const [newVideo, setNewVideo] = useState({\r\n    id: '',\r\n    snippet: {\r\n      channelId: '',\r\n      title: '',\r\n      description: '',\r\n      thumbnails: {\r\n        medium: {\r\n          url: '',\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const isLoading = useSelector(getLoading);\r\n  const [hasError, setHasError] = useState<any | undefined>();\r\n  const dispatch = useDispatch();\r\n\r\n  const videoIdRef = useRef<any>(null);\r\n  const ChannelIdRef = useRef<any>(null);\r\n  const videoTitleRef = useRef<any>(null);\r\n  const videoDescriptionRef = useRef<any>(null);\r\n  const videoImageRef = useRef<any>(null);\r\n\r\n  //\r\n  function handleIdChange(e: any) {\r\n    let field = e.target.name;\r\n    setNewVideo({\r\n      ...newVideo,\r\n      [field]: e.target.value,\r\n    });\r\n  }\r\n\r\n  function handleSnippetChange(e: any) {\r\n    let field = e.target.name;\r\n    setNewVideo((prev) => ({\r\n      ...prev,\r\n      snippet: {\r\n        ...prev.snippet,\r\n        [field]: e.target.value,\r\n      },\r\n    }));\r\n  }\r\n\r\n  function handleImageChange(e: any) {\r\n    setNewVideo((prev) => ({\r\n      ...prev,\r\n      snippet: {\r\n        ...prev.snippet,\r\n        thumbnails: {\r\n          medium: {\r\n            url: e.target.value,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  }\r\n\r\n  function handleformValidation() {\r\n    if (\r\n      !videoIdRef.current.value ||\r\n      !ChannelIdRef.current.value ||\r\n      !videoTitleRef.current.value ||\r\n      !videoDescriptionRef.current.value ||\r\n      !videoImageRef.current.value\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async function handleSubmitNewVideo(e: any) {\r\n    e.preventDefault();\r\n    if (!handleformValidation()) {\r\n      toast.error('Invalid form');\r\n    } else {\r\n      const data = {\r\n        id: videoIdRef.current.value,\r\n        snippet: {\r\n          channelId: ChannelIdRef.current.value,\r\n          title: videoTitleRef.current.value,\r\n          description: videoDescriptionRef.current.value,\r\n          thumbnails: {\r\n            medium: {\r\n              url: videoImageRef.current.value,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      try {\r\n        dispatch(watchAction.updateWatch.request(data));\r\n        closeModal();\r\n      } catch (error) {\r\n        alert(error);\r\n        closeModal();\r\n        setHasError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return isShowing\r\n    ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n          <div className='modal-overlay' />\r\n          <div className='modal-wrapper' aria-modal aria-hidden tabIndex={-1} role='dialog'>\r\n            <div className='modal'>\r\n              <div className='modal-header'>\r\n                <h2 className='modal-header__title '>Update video </h2>\r\n                <button type='button' className='modal-close-button' data-dismiss='modal' aria-label='Close' onClick={hide}>\r\n                  <span aria-hidden='true'>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className='form-container'>\r\n                <form action='' className='update-form' onSubmit={(e) => handleSubmitNewVideo(e)}>\r\n                  <div className='form__div'>\r\n                    <input\r\n                      ref={videoIdRef}\r\n                      type='text'\r\n                      className='form__input'\r\n                      placeholder=' '\r\n                      name='id'\r\n                      defaultValue={videoInformation.id ?? 'none'}\r\n                      onChange={(e) => handleIdChange(e)}\r\n                    />\r\n                    <label className='form__label'>Id</label>\r\n                  </div>\r\n                  <div className='form__div'>\r\n                    <input\r\n                      ref={videoTitleRef}\r\n                      type='text'\r\n                      className='form__input'\r\n                      placeholder=' '\r\n                      name='title'\r\n                      defaultValue={videoInformation.snippet.title ?? 'none'}\r\n                      onChange={(e) => handleSnippetChange(e)}\r\n                    />\r\n                    <label className='form__label'>Title</label>\r\n                  </div>\r\n                  <div className='form__div'>\r\n                    <input\r\n                      ref={videoImageRef}\r\n                      type='text'\r\n                      className='form__input'\r\n                      placeholder=' '\r\n                      name='url'\r\n                      defaultValue={videoInformation.snippet.thumbnails.medium.url ?? 'none'}\r\n                      onChange={(e) => handleImageChange(e)}\r\n                    />\r\n                    <label className='form__label'>Image</label>\r\n                  </div>\r\n                  <div className='form__div'>\r\n                    <input\r\n                      ref={ChannelIdRef}\r\n                      type='text'\r\n                      className='form__input'\r\n                      placeholder=' '\r\n                      name='channelId'\r\n                      defaultValue={videoInformation.snippet.channelId ?? 'none'}\r\n                      onChange={(e) => handleSnippetChange(e)}\r\n                    />\r\n                    <label className='form__label'>Channel id</label>\r\n                  </div>\r\n                  <div className='form__div'>\r\n                    <input\r\n                      ref={videoDescriptionRef}\r\n                      type='text'\r\n                      className='form__input'\r\n                      placeholder=' '\r\n                      name='description'\r\n                      defaultValue={videoInformation.snippet.description ?? 'none'}\r\n                      onChange={(e) => handleSnippetChange(e)}\r\n                    />\r\n                    <label className='form__label'>Description</label>\r\n                  </div>\r\n                  {isLoading ? (\r\n                    <input type='submit' disabled className='form__button disable' value={'loading...'} />\r\n                  ) : (\r\n                    <input type='submit' className='form__button' value={'UPDATE'} />\r\n                  )}{' '}\r\n                </form>\r\n                {hasError && <>something wrong</>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ToastContainer />\r\n        </React.Fragment>,\r\n        document.body\r\n      )\r\n    : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}