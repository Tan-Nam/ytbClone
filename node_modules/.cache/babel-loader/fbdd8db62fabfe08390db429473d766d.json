{"ast":null,"code":"import { fork, take } from 'redux-saga/effects';\nimport * as watchAction from '../action/watch';\nimport { REQUEST } from '../action';\nimport { Query } from '../../access/api/query-api';\nimport { Command } from '../../access/api/command-api';\nimport { fetchEntity } from './index'; //worker\n\nexport function* fetchVideoDetail(videoId) {\n  const request = Query.video.item;\n  const param = videoId;\n  yield fetchEntity(request, param, watchAction.watchDetail);\n}\nexport function* putVideoUpdated(data) {\n  const request = Command.trending.update;\n  const param = data;\n  yield fetchEntity(request, param, watchAction.updateWatch);\n} //wathcer\n\nexport function* watchVideoDetail() {\n  while (true) {\n    const {\n      videoId\n    } = yield take(watchAction.WATCH_DETAIL[REQUEST]);\n    yield fork(fetchVideoDetail, videoId);\n  }\n}\nexport function* watchUpdateVideoDetail() {\n  while (true) {\n    const {\n      data\n    } = yield take(watchAction.WATCH_UPDATE[REQUEST]);\n    yield fork(putVideoUpdated, data);\n  }\n}","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/state/saga/watch.ts"],"names":["fork","take","watchAction","REQUEST","Query","Command","fetchEntity","fetchVideoDetail","videoId","request","video","item","param","watchDetail","putVideoUpdated","data","trending","update","updateWatch","watchVideoDetail","WATCH_DETAIL","watchUpdateVideoDetail","WATCH_UPDATE"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CACA;;AACA,OAAO,UAAUC,gBAAV,CAA2BC,OAA3B,EAA4C;AACjD,QAAMC,OAAO,GAAGL,KAAK,CAACM,KAAN,CAAYC,IAA5B;AACA,QAAMC,KAAK,GAAGJ,OAAd;AACA,QAAMF,WAAW,CAACG,OAAD,EAAUG,KAAV,EAAiBV,WAAW,CAACW,WAA7B,CAAjB;AACD;AAED,OAAO,UAAUC,eAAV,CAA0BC,IAA1B,EAAqC;AAC1C,QAAMN,OAAO,GAAGJ,OAAO,CAACW,QAAR,CAAiBC,MAAjC;AACA,QAAML,KAAK,GAAGG,IAAd;AACA,QAAMT,WAAW,CAACG,OAAD,EAAUG,KAAV,EAAiBV,WAAW,CAACgB,WAA7B,CAAjB;AACD,C,CAED;;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,SAAO,IAAP,EAAa;AACX,UAAM;AAAEX,MAAAA;AAAF,QAAc,MAAMP,IAAI,CAACC,WAAW,CAACkB,YAAZ,CAAyBjB,OAAzB,CAAD,CAA9B;AACA,UAAMH,IAAI,CAACO,gBAAD,EAAmBC,OAAnB,CAAV;AACD;AACF;AAED,OAAO,UAAUa,sBAAV,GAAmC;AACxC,SAAO,IAAP,EAAa;AACX,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACC,WAAW,CAACoB,YAAZ,CAAyBnB,OAAzB,CAAD,CAA3B;AACA,UAAMH,IAAI,CAACc,eAAD,EAAkBC,IAAlB,CAAV;AACD;AACF","sourcesContent":["import { fork, take } from 'redux-saga/effects';\r\nimport * as watchAction from '../action/watch';\r\nimport { REQUEST } from '../action';\r\nimport { Query } from '../../access/api/query-api';\r\nimport { Command } from '../../access/api/command-api';\r\nimport { fetchEntity } from './index';\r\n//worker\r\nexport function* fetchVideoDetail(videoId: string) {\r\n  const request = Query.video.item;\r\n  const param = videoId;\r\n  yield fetchEntity(request, param, watchAction.watchDetail);\r\n}\r\n\r\nexport function* putVideoUpdated(data: any) {\r\n  const request = Command.trending.update;\r\n  const param = data;\r\n  yield fetchEntity(request, param, watchAction.updateWatch);\r\n}\r\n\r\n//wathcer\r\n\r\nexport function* watchVideoDetail() {\r\n  while (true) {\r\n    const { videoId } = yield take(watchAction.WATCH_DETAIL[REQUEST]);\r\n    yield fork(fetchVideoDetail, videoId);\r\n  }\r\n}\r\n\r\nexport function* watchUpdateVideoDetail() {\r\n  while (true) {\r\n    const { data } = yield take(watchAction.WATCH_UPDATE[REQUEST]);\r\n    yield fork(putVideoUpdated, data);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}