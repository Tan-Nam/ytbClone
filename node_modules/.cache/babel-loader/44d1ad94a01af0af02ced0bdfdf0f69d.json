{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\component\\\\video-preivew\\\\video-preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { ContentModal } from '../modal/content-modal';\nimport { useModal } from '../../hook';\nimport { VideoMetadata } from '../video-metadata/video-metadata';\nimport { VideoDescription } from '../video-description/video-description';\nimport { getVideoDurationString } from '../../util/time-format';\nimport './video-preview.scss';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertViewCount(viewCount) {\n  const formatView = ['N', 'Tr', 'T'];\n  const x = Math.floor(viewCount.length / 3);\n  let res = viewCount.length % 3 === 0 ? viewCount.slice(0, 3) : viewCount.slice(0, viewCount.length - 3 * x);\n\n  if (viewCount.length % 3) {\n    res = res.concat(formatView[Math.floor(viewCount.length / 3) - 1]);\n  } else {\n    res = res.concat(formatView[Math.floor(viewCount.length / 3) - 2]);\n  }\n\n  return res;\n}\n\nexport function VideoPreview(props) {\n  _s();\n\n  const {\n    video,\n    pathname,\n    videoId,\n    detailPreview\n  } = props;\n  const {\n    isShow,\n    toggleModal\n  } = useModal();\n  const duration = video.contentDetails ? video.contentDetails.duration : null;\n  const horizontal = props.horizontal ? 'horizontal' : null;\n  const expanded = props.expanded ? 'expanded' : null;\n  const videoDuration = getVideoDurationString(duration);\n  const videoURL = pathname.concat(videoId);\n  const viewCount = video.statistics ? video.statistics.viewCount : null;\n  let viewAndTime = '';\n\n  const modalHeader = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: video.snippet.title\n  }, void 0, false);\n\n  const modalBody = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body__item\",\n      children: /*#__PURE__*/_jsxDEV(VideoMetadata, {\n        video: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body__item\",\n      children: /*#__PURE__*/_jsxDEV(VideoDescription, {\n        video: video\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const modalFooter = detailPreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-footer__item\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: videoURL\n      },\n      className: \"detail-button button\",\n      children: \"Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false); //\n\n  if (viewCount) {\n    const viewCountShort = video.statistics.viewCount;\n    viewAndTime = `${convertViewCount(viewCountShort)} views â€¢ 1 year ago`;\n  } else viewAndTime = '';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ['video-preview', horizontal, expanded].join(' '),\n    onClick: toggleModal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: video.snippet.thumbnails.medium.url,\n            className: \"zoom-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: videoDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ['semi-bold', 'show-max-two-lines', expanded].join(' '),\n        children: video.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-preview-metadata-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-title\",\n          children: video.snippet.channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-and-time\",\n          children: viewAndTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'show-max-two-lines',\n          children: video.snippet.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ContentModal, {\n        isShown: isShow,\n        hide: toggleModal,\n        headerContent: modalHeader,\n        bodyContent: modalBody,\n        footerContent: modalFooter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoPreview, \"eSbCja8UroGZIgqrKzI7cFYnENE=\", false, function () {\n  return [useModal];\n});\n\n_c = VideoPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPreview\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/component/video-preivew/video-preview.tsx"],"names":["Image","Link","ContentModal","useModal","VideoMetadata","VideoDescription","getVideoDurationString","convertViewCount","viewCount","formatView","x","Math","floor","length","res","slice","concat","VideoPreview","props","video","pathname","videoId","detailPreview","isShow","toggleModal","duration","contentDetails","horizontal","expanded","videoDuration","videoURL","statistics","viewAndTime","modalHeader","snippet","title","modalBody","modalFooter","viewCountShort","join","thumbnails","medium","url","channelTitle","description"],"mappings":"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","sourcesContent":["import { Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { ContentModal } from '../modal/content-modal';\nimport { useModal } from '../../hook';\nimport { VideoMetadata } from '../video-metadata/video-metadata';\nimport { VideoDescription } from '../video-description/video-description';\nimport { getVideoDurationString } from '../../util/time-format';\nimport { videoPreviewProp } from '../../model/video-preview-prop';\nimport './video-preview.scss';\n\nfunction convertViewCount(viewCount: string): string {\n  const formatView = ['N', 'Tr', 'T'];\n  const x = Math.floor(viewCount.length / 3);\n  let res = viewCount.length % 3 === 0 ? viewCount.slice(0, 3) : viewCount.slice(0, viewCount.length - 3 * x);\n  if (viewCount.length % 3) {\n    res = res.concat(formatView[Math.floor(viewCount.length / 3) - 1]);\n  } else {\n    res = res.concat(formatView[Math.floor(viewCount.length / 3) - 2]);\n  }\n\n  return res;\n}\n\nexport function VideoPreview(props: videoPreviewProp) {\n  const { video, pathname, videoId, detailPreview } = props;\n  const { isShow, toggleModal } = useModal();\n  const duration = video.contentDetails ? video.contentDetails.duration : null;\n  const horizontal = props.horizontal ? 'horizontal' : null;\n  const expanded = props.expanded ? 'expanded' : null;\n  const videoDuration = getVideoDurationString(duration);\n  const videoURL = pathname.concat(videoId);\n  const viewCount = video.statistics ? video.statistics.viewCount : null;\n  let viewAndTime = '';\n  const modalHeader = <>{video.snippet.title}</>;\n  const modalBody = (\n    <>\n      <div className='modal-body__item'>\n        <VideoMetadata video={video} />\n      </div>\n      <div className='modal-body__item'>\n        <VideoDescription video={video} />\n      </div>\n    </>\n  );\n  const modalFooter = detailPreview ? (\n    <div className='modal-footer__item'>\n      <Link to={{ pathname: videoURL }} className='detail-button button'>\n        Detail\n      </Link>\n    </div>\n  ) : (\n    <></>\n  );\n\n  //\n  if (viewCount) {\n    const viewCountShort = video.statistics.viewCount;\n    viewAndTime = `${convertViewCount(viewCountShort)} views â€¢ 1 year ago`;\n  } else viewAndTime = '';\n\n  return (\n    <div className={['video-preview', horizontal, expanded].join(' ')} onClick={toggleModal}>\n      <div className='image-container'>\n        <div className='image-wrapper'>\n          <div className='frame'>\n            <Image src={video.snippet.thumbnails.medium.url} className='zoom-out' />\n          </div>\n        </div>\n        <div className='time-label'>\n          <span>{videoDuration}</span>\n        </div>\n      </div>\n\n      <div className='video-info'>\n        <div className={['semi-bold', 'show-max-two-lines', expanded].join(' ')}>{video.snippet.title}</div>\n        <div className='video-preview-metadata-container'>\n          <div className='channel-title'>{video.snippet.channelTitle}</div>\n          <div className='view-and-time'>{viewAndTime}</div>\n          {expanded && <div className={'show-max-two-lines'}>{video.snippet.description}</div>}\n        </div>\n      </div>\n\n      <>\n        <ContentModal\n          isShown={isShow}\n          hide={toggleModal}\n          headerContent={modalHeader}\n          bodyContent={modalBody}\n          footerContent={modalFooter}\n        />\n      </>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}