{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\page\\\\watch\\\\watch-content\\\\watch-content.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Video, VideoMetadata, VideoInfoBox, Loader, TrendingUpdateForm, RelatedVideo, Comment } from '../../../component/index';\nimport { Icon } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as videoAction from '../../../state/action/video';\nimport * as watchAction from '../../../state/action/watch';\nimport { getVideoById, getMostPopularVideo, getLoading, getError } from '../../../state/reducer/video';\nimport { toast, ToastContainer } from 'react-toastify';\nimport './watch-content.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WatchContent(props) {\n  _s();\n\n  const {\n    videoId\n  } = props;\n  const [videoInformation, setVideoInformation] = useState(null);\n  const [channelId, setChannelId] = useState('');\n  const [isShowing, setIsShowing] = useState(false);\n  const dispatch = useDispatch();\n  const videoDetail = useSelector(getVideoById);\n  const videoList = useSelector(getMostPopularVideo);\n  const isLoading = useSelector(getLoading);\n  const hasError = useSelector(getError); //fetch video\n\n  useEffect(() => {\n    let relevant = true;\n\n    const fetchVideo = () => {\n      try {\n        if (videoList.data.length < 1) {\n          dispatch(watchAction.watchDetail.request(videoId));\n        } else {\n          dispatch(videoAction.getVideoById.request(videoId));\n        }\n\n        const response = videoDetail;\n\n        if (response && Object.keys(response).length > 0 && relevant) {\n          setVideoInformation(response);\n          setChannelId(response.snippet.channelId);\n        }\n      } catch (error) {\n        toast.error(JSON.stringify('something wrong'));\n      }\n\n      return function cleanup() {\n        relevant = false;\n      };\n    };\n\n    fetchVideo();\n  }, [JSON.stringify(videoDetail), videoId]);\n\n  function toggleForm() {\n    setIsShowing(!isShowing);\n  }\n\n  function closeModal() {\n    setIsShowing(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watch-grid\",\n    children: [isLoading || !videoInformation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Video, {\n        className: \"video\",\n        id: videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(VideoMetadata, {\n        className: \"metadata\",\n        video: videoInformation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), channelId.length < 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"no data...\"\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(VideoInfoBox, {\n        className: \"video-info-box\",\n        video: videoInformation,\n        channelId: channelId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RelatedVideo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(Comment, {\n          videoId: videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-fixed add-button\",\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"pencil alternate\",\n          size: \"large\",\n          className: \" add-button__icon\",\n          onClick: toggleForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), hasError && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"no data... \"\n    }, void 0, false), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TrendingUpdateForm, {\n      videoInformation: videoInformation,\n      isShowing: isShowing,\n      hide: toggleForm,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WatchContent, \"BzsrugKGaFFGjkQe0eRRgMphqH4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = WatchContent;\nexport default WatchContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchContent\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/page/watch/watch-content/watch-content.tsx"],"names":["useState","useEffect","Video","VideoMetadata","VideoInfoBox","Loader","TrendingUpdateForm","RelatedVideo","Comment","Icon","useSelector","useDispatch","videoAction","watchAction","getVideoById","getMostPopularVideo","getLoading","getError","toast","ToastContainer","WatchContent","props","videoId","videoInformation","setVideoInformation","channelId","setChannelId","isShowing","setIsShowing","dispatch","videoDetail","videoList","isLoading","hasError","relevant","fetchVideo","data","length","watchDetail","request","response","Object","keys","snippet","error","JSON","stringify","cleanup","toggleForm","closeModal"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Video,\n  VideoMetadata,\n  VideoInfoBox,\n  Loader,\n  TrendingUpdateForm,\n  RelatedVideo,\n  Comment,\n} from '../../../component/index';\nimport { Icon } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as videoAction from '../../../state/action/video';\nimport * as watchAction from '../../../state/action/watch';\nimport { getVideoById, getMostPopularVideo, getLoading, getError } from '../../../state/reducer/video';\nimport { toast, ToastContainer } from 'react-toastify';\nimport './watch-content.scss';\n\nfunction WatchContent(props: any) {\n  const { videoId } = props;\n  const [videoInformation, setVideoInformation] = useState(null);\n  const [channelId, setChannelId] = useState('');\n  const [isShowing, setIsShowing] = useState(false);\n  const dispatch = useDispatch();\n  const videoDetail: any = useSelector(getVideoById);\n  const videoList: any = useSelector(getMostPopularVideo);\n  const isLoading: boolean = useSelector(getLoading);\n  const hasError: any = useSelector(getError);\n\n  //fetch video\n  useEffect(() => {\n    let relevant = true;\n    const fetchVideo = () => {\n      try {\n        if (videoList.data.length < 1) {\n          dispatch(watchAction.watchDetail.request(videoId));\n        } else {\n          dispatch(videoAction.getVideoById.request(videoId));\n        }\n        const response = videoDetail;\n        if (response && Object.keys(response).length > 0 && relevant) {\n          setVideoInformation(response);\n          setChannelId(response.snippet.channelId);\n        }\n      } catch (error) {\n        toast.error(JSON.stringify('something wrong'));\n      }\n      return function cleanup() {\n        relevant = false;\n      };\n    };\n    fetchVideo();\n  }, [JSON.stringify(videoDetail), videoId]);\n\n  function toggleForm() {\n    setIsShowing(!isShowing);\n  }\n\n  function closeModal() {\n    setIsShowing(false);\n  }\n\n  return (\n    <div className='watch-grid'>\n      {isLoading || !videoInformation ? (\n        <div className='loader'>\n          <Loader />\n        </div>\n      ) : (\n        <>\n          <Video className='video' id={videoId} />\n          <VideoMetadata className='metadata' video={videoInformation} />\n          {channelId.length < 1 ? (\n            <>no data...</>\n          ) : (\n            <VideoInfoBox className='video-info-box' video={videoInformation} channelId={channelId} />\n          )}\n          <RelatedVideo />\n          <div className='comment'>\n            <Comment videoId={videoId} />\n          </div>\n\n          <div className='position-fixed add-button'>\n            <Icon name='pencil alternate' size='large' className=' add-button__icon' onClick={toggleForm}></Icon>\n          </div>\n        </>\n      )}\n      {hasError && <>no data... </>}\n      <ToastContainer />\n      <TrendingUpdateForm\n        videoInformation={videoInformation}\n        isShowing={isShowing}\n        hide={toggleForm}\n        closeModal={closeModal}\n      />\n    </div>\n  );\n}\n\nexport default WatchContent;\n"]},"metadata":{},"sourceType":"module"}