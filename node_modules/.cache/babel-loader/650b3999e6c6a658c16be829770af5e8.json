{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string'; // const cancelTokenSource = axios.CancelToken.source();\n\nconst axiosClient = axios.create({\n  headers: {// 'content-type': 'application/json',\n    // 'Access-Control-Allow-Origin': '*',\n  },\n  timeout: 30000,\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  // if (response && response.data) {\n  //   return response.data;\n  // }\n  return response;\n}, error => {\n  alert(error.message);\n});\nexport default axiosClient;","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/access/api/axios-client.ts"],"names":["axios","queryString","axiosClient","create","headers","timeout","paramsSerializer","params","stringify","interceptors","request","use","config","response","error","alert","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAEA;;AAEA,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE,CACP;AACA;AAFO,GADsB;AAK/BC,EAAAA,OAAO,EAAE,KALsB;AAM/BC,EAAAA,gBAAgB,EAAGC,MAAD,IAAYN,WAAW,CAACO,SAAZ,CAAsBD,MAAtB;AANC,CAAb,CAApB;AASAL,WAAW,CAACO,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAOC,MAAP,IAAkB;AACrD,SAAOA,MAAP;AACD,CAFD;AAIAV,WAAW,CAACO,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CACGE,QAAD,IAAc;AACZ;AACA;AACA;AACA,SAAOA,QAAP;AACD,CANH,EAOGC,KAAD,IAAW;AACTC,EAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACD,CATH;AAYA,eAAed,WAAf","sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\n\n// const cancelTokenSource = axios.CancelToken.source();\n\nconst axiosClient = axios.create({\n  headers: {\n    // 'content-type': 'application/json',\n    // 'Access-Control-Allow-Origin': '*',\n  },\n  timeout: 30000,\n  paramsSerializer: (params) => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  return config;\n});\n\naxiosClient.interceptors.response.use(\n  (response) => {\n    // if (response && response.data) {\n    //   return response.data;\n    // }\n    return response;\n  },\n  (error) => {\n    alert(error.message);\n  }\n);\n\nexport default axiosClient;\n"]},"metadata":{},"sourceType":"module"}