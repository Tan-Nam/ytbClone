{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\page\\\\home\\\\home-content\\\\home-content.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { VideoGrid, Loader, Pagination } from '../../../component';\nimport { Query } from '../../../access/api';\nimport './home-content.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction HomeContent() {\n  _s();\n\n  const [videoList, setVideoList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [pagination, setPagination] = useState({\n    _page: 1,\n    _limit: 8,\n    totalRow: 46\n  });\n  const [filter, setFilter] = useState({\n    _page: 1,\n    _limit: 8\n  }); //\n\n  function handlePageChange(newPage) {\n    setFilter({ ...filter,\n      _page: newPage\n    });\n  }\n\n  useEffect(() => {\n    let relevant = true;\n    setIsLoading(true);\n\n    const fetchVideo = async () => {\n      try {\n        const response = await Query.video.list(filter);\n\n        if (response && relevant) {\n          setVideoList(response.data);\n          setPagination(prev => ({ ...prev,\n            _page: filter._page,\n            totalRow: response.headers['x-total-count']\n          }));\n          setIsLoading(false);\n          setHasError(false);\n        }\n      } catch (error) {\n        if (relevant) setHasError(true);\n      } finally {\n        if (relevant) {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    fetchVideo();\n    return () => {\n      relevant = false;\n    };\n  }, [filter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-content__list\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-content__item\",\n          children: /*#__PURE__*/_jsxDEV(VideoGrid, {\n            title: \"recommend\",\n            videos: videoList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        pagination: pagination,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" no data...\"\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeContent, \"J7EiKjNu/h8RRWnZXHH58E8gN3g=\");\n\n_c = HomeContent;\nexport default HomeContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeContent\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/page/home/home-content/home-content.tsx"],"names":["useState","useEffect","VideoGrid","Loader","Pagination","Query","HomeContent","videoList","setVideoList","isLoading","setIsLoading","hasError","setHasError","pagination","setPagination","_page","_limit","totalRow","filter","setFilter","handlePageChange","newPage","relevant","fetchVideo","response","video","list","data","prev","headers","error"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { VideoGrid, Loader, Pagination } from '../../../component';\nimport { Query } from '../../../access/api';\nimport './home-content.scss';\n\nfunction HomeContent() {\n  const [videoList, setVideoList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [pagination, setPagination] = useState({\n    _page: 1,\n    _limit: 8,\n    totalRow: 46,\n  });\n  const [filter, setFilter] = useState({\n    _page: 1,\n    _limit: 8,\n  });\n\n  //\n  function handlePageChange(newPage: number) {\n    setFilter({\n      ...filter,\n      _page: newPage,\n    });\n  }\n\n  useEffect(() => {\n    let relevant = true;\n    setIsLoading(true);\n    const fetchVideo = async () => {\n      try {\n        const response: any = await Query.video.list(filter);\n        if (response && relevant) {\n          setVideoList(response.data);\n          setPagination((prev) => ({\n            ...prev,\n            _page: filter._page,\n            totalRow: response.headers['x-total-count'],\n          }));\n          setIsLoading(false);\n          setHasError(false);\n        }\n      } catch (error) {\n        if (relevant) setHasError(true);\n      } finally {\n        if (relevant) {\n          setIsLoading(false);\n        }\n      }\n    };\n    fetchVideo();\n    return () => {\n      relevant = false;\n    };\n  }, [filter]);\n\n  return (\n    <div className='home-content'>\n      <div className='home-content__list'>\n        {isLoading ? (\n          <div className='loader'>\n            <Loader />\n          </div>\n        ) : (\n          <>\n            <div className='home-content__item'>\n              <VideoGrid title='recommend' videos={videoList} />\n            </div>\n          </>\n        )}\n      </div>\n      <div className='pagination-container'>\n        <Pagination pagination={pagination} onPageChange={handlePageChange} />\n      </div>\n      {hasError && <> no data...</>}\n    </div>\n  );\n}\n\nexport default HomeContent;\n"]},"metadata":{},"sourceType":"module"}