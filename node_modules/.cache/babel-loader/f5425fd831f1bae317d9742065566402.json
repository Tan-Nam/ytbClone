{"ast":null,"code":"import { fork, take } from 'redux-saga/effects';\nimport { REQUEST } from '../action';\nimport * as commentAction from '../action/comment';\nimport { Query } from '../../access/api';\nimport { fetchEntity } from './index'; //worker\n\nexport function* fetchCommentList(videoId) {\n  const request = Query.comment.list;\n  const param = videoId;\n  yield fetchEntity(request, param, commentAction.commentList);\n} //wathcer\n\nexport function* watchCommentList() {\n  while (true) {\n    const {\n      videoId\n    } = yield take(commentAction.COMMENT_LIST[REQUEST]);\n    yield fork(fetchCommentList, videoId);\n  }\n}","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/state/saga/comment.ts"],"names":["fork","take","REQUEST","commentAction","Query","fetchEntity","fetchCommentList","videoId","request","comment","list","param","commentList","watchCommentList","COMMENT_LIST"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,mBAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;AAEA,OAAO,UAAUC,gBAAV,CAA2BC,OAA3B,EAA4C;AACjD,QAAMC,OAAO,GAAGJ,KAAK,CAACK,OAAN,CAAcC,IAA9B;AACA,QAAMC,KAAK,GAAGJ,OAAd;AACA,QAAMF,WAAW,CAACG,OAAD,EAAUG,KAAV,EAAiBR,aAAa,CAACS,WAA/B,CAAjB;AACD,C,CAED;;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,SAAO,IAAP,EAAa;AACX,UAAM;AAAEN,MAAAA;AAAF,QAAc,MAAMN,IAAI,CAACE,aAAa,CAACW,YAAd,CAA2BZ,OAA3B,CAAD,CAA9B;AACA,UAAMF,IAAI,CAACM,gBAAD,EAAmBC,OAAnB,CAAV;AACD;AACF","sourcesContent":["import { fork, take } from 'redux-saga/effects';\r\nimport { REQUEST } from '../action';\r\nimport * as commentAction from '../action/comment';\r\nimport { Query } from '../../access/api';\r\nimport { fetchEntity } from './index';\r\n\r\n//worker\r\n\r\nexport function* fetchCommentList(videoId: string) {\r\n  const request = Query.comment.list;\r\n  const param = videoId;\r\n  yield fetchEntity(request, param, commentAction.commentList);\r\n}\r\n\r\n//wathcer\r\n\r\nexport function* watchCommentList() {\r\n  while (true) {\r\n    const { videoId } = yield take(commentAction.COMMENT_LIST[REQUEST]);\r\n    yield fork(fetchCommentList, videoId);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}