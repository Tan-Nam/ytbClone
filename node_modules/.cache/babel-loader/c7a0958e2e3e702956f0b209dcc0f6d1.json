{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\component\\\\video-grid\\\\video-grid.tsx\";\nimport { VideoGridHeader } from './video-grid-header/video-grid-header';\nimport { VideoPreview } from '../video-preivew/video-preview';\nimport './video-grid.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function VideoGrid(props) {\n  const {\n    title,\n    videos\n  } = props;\n\n  if (!videos || !videos.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n\n  const gridItems = videos.map(video => {\n    return /*#__PURE__*/_jsxDEV(VideoPreview, {\n      video: video,\n      pathname: \"/watch/\",\n      videoId: video.id,\n      detailPreview: false\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VideoGridHeader, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: gridItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = VideoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/component/video-grid/video-grid.tsx"],"names":["VideoGridHeader","VideoPreview","VideoGrid","props","title","videos","length","gridItems","map","video","id"],"mappings":";AAAA,SAASA,eAAT,QAAgC,uCAAhC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAO,mBAAP;;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+B;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,KAA1B;;AACA,MAAI,CAACE,MAAD,IAAW,CAACA,MAAM,CAACC,MAAvB,EAA+B;AAC7B,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,SAAc,GAAGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAgB;AAChD,wBAAO,QAAC,YAAD;AAA6B,MAAA,KAAK,EAAEA,KAApC;AAA2C,MAAA,QAAQ,EAAC,SAApD;AAA8D,MAAA,OAAO,EAAEA,KAAK,CAACC,EAA7E;AAAiF,MAAA,aAAa,EAAE;AAAhG,OAAmBD,KAAK,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFsB,CAAvB;AAGA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEN;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BG;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;KAfeL,S","sourcesContent":["import { VideoGridHeader } from './video-grid-header/video-grid-header';\nimport { VideoPreview } from '../video-preivew/video-preview';\nimport './video-grid.scss';\n\nexport function VideoGrid(props: any) {\n  const { title, videos } = props;\n  if (!videos || !videos.length) {\n    return <div />;\n  }\n\n  const gridItems: any = videos.map((video: any) => {\n    return <VideoPreview key={video.id} video={video} pathname='/watch/' videoId={video.id} detailPreview={false} />;\n  });\n  return (\n    <>\n      <VideoGridHeader title={title} />\n      <div className='video-grid'>{gridItems}</div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}