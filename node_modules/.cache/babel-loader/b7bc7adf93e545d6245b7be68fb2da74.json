{"ast":null,"code":"var _jsxFileName = \"E:\\\\fileExFrZip\\\\RFP\\\\src\\\\component\\\\related-video\\\\related-video.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { VideoPreview } from '../video-preivew/video-preview';\nimport { Loader } from '../loader/loader';\nimport { Query } from '../../access/api/query-api';\nimport './related-video.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RelatedVideo() {\n  _s();\n\n  const [relateVideo, setRelateVideo] = useState();\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n  let relatedVideosPreviews = []; //\n\n  useEffect(() => {\n    let relevant = true;\n\n    const fetchRelateVideo = async () => {\n      try {\n        const response = await Query.trending.list({\n          _page: 1,\n          _limit: 25\n        });\n\n        if (relevant && response) {\n          setRelateVideo(response.data);\n          setIsloading(false);\n        }\n      } catch (error) {\n        if (relevant) {\n          setHasError(true);\n        }\n      }\n    };\n\n    fetchRelateVideo();\n    return () => {\n      relevant = false;\n    };\n  }, []);\n\n  if (relateVideo) {\n    relatedVideosPreviews = relateVideo.map(relatedVideo => /*#__PURE__*/_jsxDEV(VideoPreview, {\n      video: relatedVideo,\n      pathname: \"/watch/\",\n      videoId: relatedVideo.id,\n      horizontal: true,\n      detailPreview: true\n    }, relatedVideo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"related-video\",\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [relatedVideosPreviews, \" \"]\n    }, void 0, true), hasError && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"no data...\"\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RelatedVideo, \"5klf4gbHKWCC6GqYonkfGeV+Qek=\");\n\n_c = RelatedVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedVideo\");","map":{"version":3,"sources":["E:/fileExFrZip/RFP/src/component/related-video/related-video.tsx"],"names":["useState","useEffect","VideoPreview","Loader","Query","RelatedVideo","relateVideo","setRelateVideo","hasError","setHasError","isLoading","setIsloading","relatedVideosPreviews","relevant","fetchRelateVideo","response","trending","list","_page","_limit","data","error","map","relatedVideo","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAO,sBAAP;;;AAEA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAIY,qBAA0B,GAAG,EAAjC,CAJ6B,CAM7B;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,GAAG,IAAf;;AACA,UAAMC,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,QAAa,GAAG,MAAMX,KAAK,CAACY,QAAN,CAAeC,IAAf,CAAoB;AAC9CC,UAAAA,KAAK,EAAE,CADuC;AAE9CC,UAAAA,MAAM,EAAE;AAFsC,SAApB,CAA5B;;AAIA,YAAIN,QAAQ,IAAIE,QAAhB,EAA0B;AACxBR,UAAAA,cAAc,CAACQ,QAAQ,CAACK,IAAV,CAAd;AACAT,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,OATD,CASE,OAAOU,KAAP,EAAc;AACd,YAAIR,QAAJ,EAAc;AACZJ,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;AACF,KAfD;;AAgBAK,IAAAA,gBAAgB;AAChB,WAAO,MAAM;AACXD,MAAAA,QAAQ,GAAG,KAAX;AACD,KAFD;AAGD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAIP,WAAJ,EAAiB;AACfM,IAAAA,qBAAqB,GAAGN,WAAW,CAACgB,GAAZ,CAAiBC,YAAD,iBACtC,QAAC,YAAD;AAEE,MAAA,KAAK,EAAEA,YAFT;AAGE,MAAA,QAAQ,EAAC,SAHX;AAIE,MAAA,OAAO,EAAEA,YAAY,CAACC,EAJxB;AAKE,MAAA,UAAU,EAAE,IALd;AAME,MAAA,aAAa,EAAE;AANjB,OACOD,YAAY,CAACC,EADpB;AAAA;AAAA;AAAA;AAAA,YADsB,CAAxB;AAUD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGd,SAAS,gBACR;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADQ,gBAKR;AAAA,iBAAGE,qBAAH;AAAA,oBANJ,EAQGJ,QAAQ,iBAAI;AAAA;AAAA,qBARf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxDeH,Y;;KAAAA,Y","sourcesContent":["import { useState, useEffect } from 'react';\nimport { VideoPreview } from '../video-preivew/video-preview';\nimport { Loader } from '../loader/loader';\nimport { responseVideo } from '../../model/video';\nimport { Query } from '../../access/api/query-api';\nimport './related-video.scss';\n\nexport function RelatedVideo() {\n  const [relateVideo, setRelateVideo] = useState<Array<responseVideo>>();\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsloading] = useState(true);\n  let relatedVideosPreviews: any = [];\n\n  //\n  useEffect(() => {\n    let relevant = true;\n    const fetchRelateVideo = async () => {\n      try {\n        const response: any = await Query.trending.list({\n          _page: 1,\n          _limit: 25,\n        });\n        if (relevant && response) {\n          setRelateVideo(response.data);\n          setIsloading(false);\n        }\n      } catch (error) {\n        if (relevant) {\n          setHasError(true);\n        }\n      }\n    };\n    fetchRelateVideo();\n    return () => {\n      relevant = false;\n    };\n  }, []);\n\n  if (relateVideo) {\n    relatedVideosPreviews = relateVideo.map((relatedVideo: any) => (\n      <VideoPreview\n        key={relatedVideo.id}\n        video={relatedVideo}\n        pathname='/watch/'\n        videoId={relatedVideo.id}\n        horizontal={true}\n        detailPreview={true}\n      />\n    ));\n  }\n\n  return (\n    <div className='related-video'>\n      {isLoading ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        <>{relatedVideosPreviews} </>\n      )}\n      {hasError && <>no data...</>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}